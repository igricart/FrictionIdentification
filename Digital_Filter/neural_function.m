function [Y_ddot, Y_dot, Y, Xf, Af] = neural_function(X,~,~)
%NEURAL_FUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 12-Apr-2019 13:13:25.
% 
% [Y] = neural_function(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 1xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 39650;
x1_step1.gain = 0.000851063829787234;
x1_step1.ymin = -1;


% Layer 1
b1 = [140.11714909020054165;137.24839406758508176;-134.32848880520958801;-131.4936449134118277;-128.5478455612445714;-126.10433818922200544;-123.05677751764442007;-120.18822478347273375;117.43702866198799484;114.38576474825515561;-111.71543298782641784;-108.90889582349177545;-106.08419467375287581;-103.11733773842315998;100.45304547365034864;97.585514097641592457;94.736640409216519743;92.02900489297473996;-89.042026907880810427;86.319495603468851641;-83.500541634279656478;-80.638171982864932374;-77.699264728357405829;74.955750612812181544;-71.968039485659701882;69.326819601659337877;66.434259324203736696;-63.581669866149994164;-60.748159356464256575;57.978049116994426981;-55.126048357790160992;52.277527731573393055;-49.339499931735090854;46.707736290517765099;43.894007642814628412;40.966687735139316828;-38.17272691392891204;-35.348499425567155185;-32.527940163978122712;-29.671584618302436098;-26.883033515227086951;24.108553286418704431;-21.192372524194624361;18.361535409447043321;-15.709557782965351436;12.54655944075274121;-9.9049142658561830643;-7.0778889119695662657;4.1821911517843455286;-1.2403048251666666246;-1.3082159386942244783;-4.2007473386033042928;6.955112947960633285;9.9002720422250707344;12.742443100221132468;-15.563435708053399154;-18.451475366645698983;-21.174721741724514601;-24.052910906020386506;26.949389725924088879;29.859230098593354086;-32.489004367725904387;35.296629957886104023;38.150576880307838223;41.012369774229540553;43.671909499619587791;46.874976758401082577;-49.388796855704235611;-52.312616773360353761;55.16058558123888389;-58.049788040738690142;60.783961714621504768;63.84843953340833167;-66.310050407536081707;69.327410178679187425;-72.085981608797865761;-75.078378557442945862;77.787316971457542536;-80.564155307133972883;-83.449235712420858135;-86.280397243950133657;-89.067256247089630961;91.882146962368963727;94.872968925142217245;-97.648298023187322769;100.40704857482404577;103.26976026089333516;106.12272227077157538;108.72175067492278799;-111.69125587182458048;114.63211083580665672;117.23246336869068784;120.04946627743437659;122.99165646138875729;125.86030217395006048;128.66006042704725587;-131.51031275821250688;-134.35232169704113403;-137.23010002822431375;-140.14926580905810738];
IW1_1 = [-139.8818195165966074;-139.92324651747543385;140.01442199531180677;140.01994835809824735;140.12746779351459736;139.77849723045412134;139.97599720491339781;140.01161163499244822;-139.946804021625411;-140.12972700793221748;140.00138286741861293;139.98392394772616854;139.98200349725786396;140.08421622881621715;-139.96470035287791234;-139.99342671075953604;-140.00707084124113067;-139.9277220878196033;140.03100973829265286;-139.96490775455151834;139.96018045133621399;139.9813577440193626;140.04261767367501079;-139.99598498537821456;140.07879381033956179;-139.98348320146877199;-140.01468282188596959;140.02429758249752467;140.02622479441967585;-140.00076503991914478;140.0100148639261306;-140.01664639169231918;140.05360436124345824;-139.98497769690104064;-139.98256906177923042;-140.01216452018826431;140.00134304945015629;140.0011725989388367;139.99878454211273038;140.00526409244068304;139.99736727212930987;-139.98717142172864669;140.00310482476209017;-140.00277465338911043;139.9827843459724761;-140.01666392935337058;139.99942289241394633;139.99947168733089597;-140.00174146497246852;140.00075121605109985;-139.99799160966162503;-140.00091526546677301;140.00568036088751001;139.99985447922725257;139.99769015493808411;-139.99802220652341589;-139.99075035352279883;-140.00564300993752909;-139.99761625661926701;139.98433813084676558;139.96306616188900307;-140.00791979714009017;140.01388073390879185;140.00758635375109407;139.99908617312158299;140.0517093449926449;139.92937748051636504;-140.03726636312069331;-140.003693275746258;139.99639668984369223;-139.97025363110429907;140.00982033310239672;139.90272327242163897;-140.07217212269813444;139.98278243356062944;-140.01721562079916339;-139.93075969087456656;139.99439500848322382;-140.02311777471794585;-139.9910452586479721;-139.98839953201755293;-140.01487226044599765;140.02430801794753279;139.91445645941601583;-139.9488905708754487;139.99729366529831509;139.97189843481780258;139.95258317534666048;140.12862128136876549;-140.02088942060848353;139.9265053919333468;140.11683122019377379;140.12975260601854188;140.03318890692077048;139.9983424572568822;140.02431014122095121;-140.00450286487097173;-139.99138087893527427;-139.94189830742394065;-139.8510281644428801];

% Layer 2
b2 = 0.12925500303513215439;
LW2_1 = [0.049854467147290026929 0.11293723400341706964 -0.050830396649896344985 -0.1105991166088013955 -0.0027182092918806022297 -0.066118973598821628723 0.11364735480772072962 0.078358517583777043125 -0.096626290552554949809 -0.14652851298932212387 0.023126745775247245507 0.13029324422953242335 0.041419953469842521465 -0.12052381778739702789 0.14754933268597320017 0.12673995842460777927 0.04656429819956767191 0.092649168924669650371 -0.059803146928775488544 0.025184817766456778221 0.06273673895496603703 0.15810007585259425178 0.053527872812936347358 -0.077398422070658959293 0.10645812003636601073 -0.098920239734243659013 -0.05347143464723944084 -0.090612466718093656604 -0.19883835613040545809 0.092967029957885430336 -0.073244894725390918833 0.068329611582489013788 -0.077196342178947302548 0.03264658706222371698 -0.10816002607129562851 -0.078826573665932764268 0.11741305218288052015 0.080463482101298666738 0.050633213076711210132 0.1425678404862352755 0.064575689414021406054 0.13028935343501651944 -0.14863026700110751332 0.090808358559847701663 -0.051711775944999177623 0.13100943940336073901 -0.060821728365364535751 -0.020208808248735894708 -0.083728992599028800869 0.087317648572382305927 -0.10812429459332489889 -0.10347018945751151886 0.11272892704737771941 0.071059148353155923705 0.052411831612200934782 0.085205462600059830858 0.20358827069143309307 0.095931311472978522681 0.083690716792836891691 -0.11228249615326686695 -0.069631233589792423944 0.016698577692429245056 0.10423548824266400115 0.08637003629149320183 0.099816599000107725237 0.16244866292996174018 0.048385017839508395743 -0.11528897074724803185 -0.049866949787001360606 -0.059184415714840052369 0.1981139451699538423 -0.13842286712969623097 -0.11984128838174776255 0.031091446172942960313 -0.08233342873330910805 0.018506806423783925264 -0.066861211613767748685 0.087273761675676436722 -0.14730913645576415583 -0.077997563595750704635 -0.10157949680221967093 -0.11209799475263945712 0.056038256079770844276 -0.032256735472275574472 0.24044051053173887134 -0.12140935206861205864 -0.076672802020386274235 -0.09524015864177161339 -0.022456686677289061649 0.087937982474698889179 0.056953595798871103906 0.14475598083199031629 0.078341974714824957893 0.095246186890965381378 0.090846369607828464376 0.098734102479413513032 -0.11484614407680752979 0.082723175443969912402 0.14224564987879237399 0.29607090524870122161];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 4391.73825282966;
y1_step1.xoffset = -0.000431432096592837;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);
Y_dot = cell(1,TS);
Y_ddot = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    
    % Output 2
    Y_dot{1,ts} = LW2_1*diag(IW1_1)*(1 - a1.*a1);
    
    % Output 3
    Y_ddot{1,ts} = -LW2_1*diag(IW1_1)*2*(a1 - a1.*a1.*a1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end

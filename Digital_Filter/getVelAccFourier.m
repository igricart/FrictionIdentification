function [df, ddf] = getVelAccFourier(fourier, t)
% Returns velocity and acceleration at time t based on a fourier series

    params = coeffvalues(fourier);
    a1 = params(2);
    b1 = params(3);
    a2 = params(4);
    b2 = params(5);
    a3 = params(6);
    b3 = params(7);
    a4 = params(8);
    b4 = params(9);
    a5 = params(10);
    b5 = params(11);
    a6 = params(12);
    b6 = params(13);
    a7 = params(14);
    b7 = params(15);
    a8 = params(16);
    b8 = params(17);
    w  = params(18);

    df = b1*w*cos(w*t) + 2*b2*w*cos(2*w*t) + ...
         3*b3*w*cos(3*w*t) + 4*b4*w*cos(4*w*t) + ...
         5*b5*w*cos(5*w*t) + 6*b6*w*cos(6*w*t) + ...
         7*b7*w*cos(7*w*t) + 8*b8*w*cos(8*w*t) - ...
         a1*w*sin(w*t) - 2*a2*w*sin(2*w*t) - ...
         3*a3*w*sin(3*w*t) - 4*a4*w*sin(4*w*t) - ...
         5*a5*w*sin(5*w*t) - 6*a6*w*sin(6*w*t) - ...
         7*a7*w*sin(7*w*t) - 8*a8*w*sin(8*w*t);

    ddf = - a1*w^2*cos(w*t) - 4*a2*w^2*cos(2*w*t) - ...
            9*a3*w^2*cos(3*w*t) - 16*a4*w^2*cos(4*w*t) - ...
            25*a5*w^2*cos(5*w*t) - 36*a6*w^2*cos(6*w*t) - ...
            49*a7*w^2*cos(7*w*t) - 64*a8*w^2*cos(8*w*t) - ...
            b1*w^2*sin(w*t) - 4*b2*w^2*sin(2*w*t) - ...
            9*b3*w^2*sin(3*w*t) - 16*b4*w^2*sin(4*w*t) - ...
            25*b5*w^2*sin(5*w*t) - 36*b6*w^2*sin(6*w*t) - ...
            49*b7*w^2*sin(7*w*t) - 64*b8*w^2*sin(8*w*t);
end